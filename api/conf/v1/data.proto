syntax = "proto3";

package conf;

import "google/protobuf/duration.proto";

option go_package = "github.com/devexps/go-bootstrap/gen/api/go/conf/v1;conf";

// Data
message Data {
  // Database
  message Database {
    string driver = 1; // Supportï¼šmysql, postgresql, mongodb, sqlite...
    string source = 2; // Data source (DSN string)
    bool migrate = 3; // Data migration
    bool debug = 4; // Debug
    int32 max_idle_connections = 5; // Maximum number of idle connections in the connection pool
    int32 max_open_connections = 6; // Maximum number of open connections in the connection pool
    google.protobuf.Duration connection_max_lifetime = 7; // The maximum length of time a connection can be reused
  }

  // redis
  message Redis {
    string network = 1;
    string addr = 2;
    string password = 3;
    int32 db = 4; // Database index

    google.protobuf.Duration dial_timeout = 5;
    google.protobuf.Duration read_timeout = 6;
    google.protobuf.Duration write_timeout = 7;

    bool enable_tracing = 8;
    bool enable_metrics = 9;
  }

  // MongoDB
  message MongoDB {
    string address = 1;
    string username = 2;
    string password = 3;
  }

  // ClickHouse
  message ClickHouse {
    string address = 1;
    string database = 2;
    string username = 3;
    string password = 4;
    bool debug = 5;
    string compression_method = 6;
    google.protobuf.Duration dial_timeout = 7;
    int32 max_execution_time = 8;
    int32 max_open_conns = 9;
    int32 max_idle_conns = 10;
    google.protobuf.Duration conn_max_life_time = 11;
    int32 block_buffer_size = 12;
    int32 max_compression_buffer = 13;
    string conn_open_strategy = 14;
    int32 max_idle_connections = 15;
    int32 max_open_connections = 16;
    google.protobuf.Duration connection_max_lifetime = 17;
    string protocol = 18;
  }

  // Kafka
  message Kafka {
    repeated string addrs = 1;
    string codec = 2;
    bool async = 3;
    bool allow_auto_topic_creation = 4;
    int32 batch_size = 5;
    google.protobuf.Duration batch_timeout = 6;
    google.protobuf.Duration read_timeout = 7;
    google.protobuf.Duration write_timeout = 8;
    int64 batch_bytes = 9;
  }

  // ElasticSearch
  message ElasticSearch {
    string address = 1;
    string username = 2;
    string password = 3;
    bool enable_sniffer = 4;
    bool enable_gzip = 5;
    google.protobuf.Duration health_check_interval = 6;
  }

  // Cassandra
  message Cassandra {
    string address = 1;
    string username = 2;
    string password = 3;
    string keyspace = 5;
    google.protobuf.Duration connect_timeout = 6;
    google.protobuf.Duration timeout = 7;
    uint32 consistency = 8;
    bool disable_initial_host_lookup = 9;
    bool ignore_peer_addr = 10;
  }

  Database database = 1;  // DatabaseDSN

  Redis redis = 10;  // Redis
  MongoDB mongodb = 11;  // MongoDB database
  ElasticSearch elastic_search = 12;  // ElasticSearch database
  Cassandra cassandra = 13;  // Cassandra database

  Kafka kafka = 20;  // Kafka service
}